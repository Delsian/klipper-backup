[mcu PITB]
##  You need to select 'Communication interface' to USB in 'make menuconfig'
##  when you compile Klipper
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
#serial: /dev/serial/by-id/usb-Klipper_rp2040_E66160F423669A37-if00
canbus_uuid=ec6e30560b7e
## When using klipper with PITB V2, you can only use CAN or USB. When using CAN, 
## you need to short-circuit SEL and GND, that is, plug in the jumper cap.
## Uncomment below if you're using the Raspberry uart0 to communicate with Spider
#restart_method: command

#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]
##	Connected to MOT0 (B Motor)
step_pin: PITB:X_STEP
dir_pin: PITB:X_DIR
enable_pin: !PITB:X_ENABLE
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: ^!PITB:X_STOP

homing_speed: 70   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[gcode_macro _USER_VARIABLES]
variable_x_driver: "tmc5160"
gcode:

[tmc5160 stepper_x]
cs_pin: PITB:X_TMCUART
spi_bus: spi0_gpio4_gpio3_gpio2
interpolate: True
diag1_pin: PITB:X_DIAG
run_current: 0.9
hold_current: 0.4
sense_resistor: 0.075
stealthchop_threshold: 0


[stepper_y]
##	Connected to MOT1 (A Motor)
step_pin: PITB:Y_STEP
dir_pin: !PITB:Y_DIR
enable_pin: !PITB:Y_ENABLE
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: ^!PITB:Y_STOP

homing_speed: 70  #Max 100
homing_retract_dist: 10
homing_positive_dir: true

[gcode_macro _USER_VARIABLES]
variable_y_driver: "tmc5160"
gcode:

[tmc5160 stepper_y]
cs_pin: PITB:Y_TMCUART
spi_bus: spi0_gpio4_gpio3_gpio2
interpolate: True
diag1_pin: PITB:Y_DIAG
run_current: 0.9
hold_current: 0.4
sense_resistor: 0.075
stealthchop_threshold: 0

[autotune_tmc stepper_x]
motor: monoprice-17hs4401s

[autotune_tmc stepper_y]
motor: monoprice-17hs4401s

[temperature_sensor chamber]
# T0 GPIO26
# T1 GPIO27
# T2 GPIO28
sensor_type: Generic 3950
sensor_pin: PITB:CHAMBER_TEMPERATURE
min_temp: 0
max_temp: 80

[temperature_fan fan_r_motor]
sensor_type: Generic 3950
sensor_pin: PITB:MOTOR_R_TEMPERATURE
pin: PITB:FAN0
max_temp: 85.0                
target_temp: 49.0
min_temp: -40
shutdown_speed: 0.0
kick_start_time: 0.5
off_below: 0.2
max_speed: 1.0
min_speed: 0
control: pid
pid_Kp: 2.0
pid_Ki: 5.0
pid_Kd: 0.5
pid_deriv_time: 2.0

[temperature_fan fan_l_motor]
sensor_type: Generic 3950
sensor_pin: PITB:MOTOR_L_TEMPERATURE
pin: PITB:FAN1
max_temp: 85.0                
target_temp: 49.0
min_temp: -40
shutdown_speed: 0.0
kick_start_time: 0.5
off_below: 0.2
max_speed: 1.0
min_speed: 0
control: pid
pid_Kp: 2.0
pid_Ki: 5.0
pid_Kd: 0.5
pid_deriv_time: 2.0

[gcode_macro _USER_VARIABLES]
variable_chamber_temperature_sensor_enabled: True
variable_chamber_temperature_sensor_name: "Chamber"
gcode:

[output_pin activity_led]
pin: PITB:ACTIVITY_LED

#[temperature_sensor XY_DRIVES]
#sensor_type = temperature_mcu
#min_temp = 10
#max_temp = 90
#sensor_mcu: PITB
