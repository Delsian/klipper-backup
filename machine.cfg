[virtual_sdcard]
path: ~/printer_data/gcodes
on_error_gcode:
    {% if printer["gcode_macro _USER_VARIABLES"].status_leds_enabled %}
        _STATUS_OFF
    {% endif %}
    {% if printer["gcode_macro _USER_VARIABLES"].probe_type_enabled == "dockable" or printer["gcode_macro _USER_VARIABLES"].probe_type_enabled == "dockable_virtual" %}
        _PROBE_ON_ERROR_ACTION
    {% endif %}

    # Park only if printer is homed
    {% if "xyz" in printer.toolhead.homed_axes %}
        PARK
    {% endif %}
   

[idle_timeout]
timeout: 3600
gcode:
    RESPOND MSG="Idle timeout reached"
    TURN_OFF_HEATERS
    M84
    M106 S0
    {% if printer["gcode_macro _USER_VARIABLES"].light_enabled %}
        LIGHT_OFF
    {% endif %}
    {% if printer["gcode_macro _USER_VARIABLES"].status_leds_enabled %}
        _STATUS_OFF
    {% endif %}

[pause_resume]
[display_status]
[exclude_object]
[respond]

[force_move]
enable_force_move: True

[gcode_arcs]
resolution: 0.1

## Case Light

[gcode_macro _USER_VARIABLES]
variable_light_enabled: True
variable_light_pin_name: "caselight"
gcode:

# Also include directly the white lights control macros from here
[include macros/hardware_functions/caselights.cfg]

[output_pin caselight]
pin: LIGHT_OUTPUT
pwm: true
value: 0
scale: 100
cycle_time: 0.010

# -----------------------------------------------------------------------------------
# Include all the remaining files (not already included in config files) and scripts
# from here to avoid to include them in the main printer.cfg and avoid user confusion
# -----------------------------------------------------------------------------------

#[include software/shaketune.cfg]

[include macros/base/*.cfg]
[include macros/base/homing/homing_*.cfg]

[include macros/calibration/calib*.cfg]

[include macros/helpers/heatsoak.cfg]
[include macros/helpers/prime_line.cfg]
[include macros/helpers/nozzle_cleaning.cfg]
[include macros/helpers/temp_check.cfg]

[include macros/miscs/compatibility.cfg]
[include macros/miscs/debugging.cfg]
[include macros/miscs/startup.cfg]

[shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    Path where the processed results will be stored. If the folder doesn't exist,
#    it will be automatically created. You can change this if you'd like to store 
#    results in a different location.
# number_of_results_to_keep: 10
#    This setting defines how many results you want to keep in the result folder.
#    Once the specified number is exceeded, older results will be automatically deleted
#    to free up space on the SD card and avoid cluttering the results folder.
# keep_raw_data: False
#    If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer
#    .stdata files in the results folder. This can be useful for debugging or archiving purposes.
#    Please always attach them when reporting any issues on GitHub or Discord.
# show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part
#    of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
#    If set to False, the macros will be hidden but still accessible from the console by typing
#    their names manually, which can be useful if you prefer to encapsulate them into your own macros.
# timeout: 600
#    This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating 
#    graphs from a .stdata file. 10 minutes should be more than enough in most cases, but if you have
#    slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
# measurements_chunk_size: 2
#    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
#    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
#    command will merge these chunks into the final .stdata file for processing. "2" is a very
#    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
#    RAM, and should work for everyone. However, if you are using a powerful computer, you may
#    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
#    the chunk and avoid stressing the filesystem too much.
# max_freq: 200
#    This setting defines the maximum frequency at which the calculation of the power spectral density
#    is cutoff. The default value should be fine for most machines and accelerometer combinations and
#    avoid touching it unless you know what you're doing.
# dpi: 300
#    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
#    and strikes a balance between performance and readability, ensuring that graphs are clear
#    without using too much RAM to generate them. Usually, you shouldn't need to change this value.